name: CI

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  ci:
    runs-on: windows-latest

    name: Build Windows binary

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Get tag
      uses: olegtarasov/get-tag@v2.1

    - name: Install Cygwin
      run: |
        choco install -y cygwin cyg-get wget
        cyg-get gcc-g++ make autoconf automake autopoint libtool gettext

    - name: Download fswatch
      run: |
        wget "https://github.com/emcrisostomo/fswatch/releases/download/${{ env.GIT_TAG_NAME }}/fswatch-${{ env.GIT_TAG_NAME }}.tar.gz"
        tar -xzf "fswatch-${{ env.GIT_TAG_NAME }}.tar.gz"
        rm "fswatch-${{ env.GIT_TAG_NAME }}.tar.gz"

    - name: Build fswatch
      shell: cmd
      run: |
        cd "${{ github.workspace }}/fswatch-${{ env.GIT_TAG_NAME }}"
        path c:/tools/cygwin/bin

        bash -c './configure'

        bash -c 'make'

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GIT_TAG_NAME }}
        release_name: fswatch ${{ env.GIT_TAG_NAME }}
        draft: false
        prerelease: false

    - name: Upload binary to GitHub Releases
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./fswatch-${{ env.GIT_TAG_NAME }}/fswatch/src/fswatch.exe
        asset_name: fswatch.exe
        asset_content_type: application/vnd.microsoft.portable-executable
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
